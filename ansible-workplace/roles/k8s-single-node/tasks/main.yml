- name: Disable swap
  command: swapoff -a

- name: Remove swap entry from fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*swap.*)$'
    replace: '# \1'

- name: Enable required kernel modules
  shell: |
    modprobe overlay
    modprobe br_netfilter
  args:
    warn: false

- name: Set required sysctl params
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
      net.bridge.bridge-nf-call-ip6tables = 1

- name: Apply sysctl settings
  command: sysctl --system

- name: Install containerd
  shell: |
    yum install -y yum-utils
    yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    yum install -y containerd.io
    mkdir -p /etc/containerd
    containerd config default > /etc/containerd/config.toml
    systemctl restart containerd
    systemctl enable containerd

- name: Add Kubernetes repository
  copy:
    dest: /etc/yum.repos.d/kubernetes.repo
    content: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
      enabled=1
      gpgcheck=1
      repo_gpgcheck=1
      gpgkey=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repomd.xml.key

- name: Install Kubernetes components
  package:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present

- name: Enable and start kubelet
  systemd:
    name: kubelet
    enabled: yes
    state: started

- name: Initialize Kubernetes (single node)
  command: >
    kubeadm init
    --pod-network-cidr=10.244.0.0/16
    --apiserver-advertise-address={{ ansible_default_ipv4.address }}
  args:
    creates: /etc/kubernetes/admin.conf
  register: kubeadm_init

- name: Create .kube directory for root user
  file:
    path: /root/.kube
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Set up kubeconfig for root user
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes
    owner: root
    group: root
    mode: '0644'

- name: Install Flannel network plugin
  shell: >
    kubectl apply --validate=false -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Ensure CNI plugin directory exists
  file:
    path: /opt/cni/bin
    state: directory
    mode: '0755'

- name: Download CNI plugins if not present
  get_url:
    url: https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz
    dest: /opt/cni/cni-plugins.tgz
    mode: '0644'
  when: not lookup('fileglob', '/opt/cni/bin/loopback', errors='ignore')

- name: Extract CNI plugins if loopback plugin not found
  unarchive:
    src: /opt/cni/cni-plugins.tgz
    dest: /opt/cni/bin
    remote_src: yes
    creates: /opt/cni/bin/loopback

- name: Restart CoreDNS pods if loopback plugin was just installed
  shell: kubectl delete pod -n kube-system -l k8s-app=kube-dns
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  when: "'loopback' not in lookup('fileglob', '/opt/cni/bin/*', wantlist=True)"

- name: Allow master node to run pods
  shell: >
    kubectl taint nodes --all node-role.kubernetes.io/control-plane- || true
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
